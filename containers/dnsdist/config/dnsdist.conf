-- udp/tcp dns listening
setLocal("0.0.0.0:53", {})

-- Local CoreDNS
newServer({
  address = "10.5.0.3",
  pool = "coredns"
})

-- NextDNS over TLS
newServer({
  address = "45.90.28.154:443",
  tls = "openssl",
  subjectName = "dns.nextdns.io",
  dohPath = "/3b2e46",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "nextdns_trusted"
})
newServer({
  address = "45.90.30.154:443",
  tls = "openssl",
  subjectName = "dns.nextdns.io",
  dohPath = "/3b2e46",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "nextdns_trusted"
})


-- CloudFlare DNS over TLS
newServer({
  address = "1.1.1.1:853",
  tls = "openssl",
  subjectName = "cloudflare-dns.com",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "cloudflare"
})
newServer({
  address = "1.0.0.1:853",
  tls = "openssl",
  subjectName = "cloudflare-dns.com",
  validateCertificates = true,
  checkInterval = 10,
  checkTimeout = 2000,
  pool = "cloudflare"
})

-- Enable caching
pc = newPacketCache(10000, {
  maxTTL = 86400,
  minTTL = 0,
  temporaryFailureTTL = 60,
  staleTTL = 60,
  dontAge = false
})
getPool(""):setCache(pc)

-- Request logging, uncomment to log DNS requests/responses to stdout
-- addAction(AllRule(), LogAction("", false, false, true, false, false))
-- addResponseAction(AllRule(), LogResponseAction("", false, true, false, false))

-- Routing rules
addAction('unifi', PoolAction('coredns'))
addAction('trux.dev', PoolAction('coredns'))
addAction('natallan.com', PoolAction('coredns'))
addAction('1.10.in-addr.arpa', PoolAction('coredns'))

addAction("10.8.10.0/24", PoolAction("cloudflare"))  -- lan
addAction("10.8.20.0/24", PoolAction("cloudflare"))  -- servers vlan
addAction("10.8.30.0/24", PoolAction("cloudflare"))  -- trusted vlan
addAction("10.8.40.0/24", PoolAction("cloudflare"))      -- iot vlan
addAction("10.8.11.0/24", PoolAction("controld_trusted")) -- wg_trusted vlan
